{"ast":null,"code":"var _jsxFileName = \"/Users/raymondzhang/Code/website/raymondxyz.github.io/raymondxyz/src/components/welcome/Welcome.js\";\nimport React, { useState } from \"react\";\nimport { colors } from \"../../styling/colors\";\nimport SpringBar from \"./SpringBar\";\nimport { FaLinkedin, FaInstagram } from \"react-icons/fa\";\nimport { AiOutlineMail, AiFillGithub } from \"react-icons/ai\";\nimport { Trail, animated, config } from \"react-spring\";\n\nfunction Welcome(_ref) {\n  let {} = _ref;\n  const [springDone, setSpringDone] = useState(false); // Create array for trail animation\n\n  const bars = [];\n\n  for (let i = 0; i < 10; i++) {\n    bars.push( /*#__PURE__*/React.createElement(SpringBar, {\n      barWidth: \"10vw\",\n      barColor: colors.green,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full_section\",\n    style: {\n      backgroundColor: colors.white\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, springDone ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: colors.blue,\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Trail, {\n    items: bars,\n    from: {\n      marginTop: \"-100vh\"\n    },\n    to: {\n      marginTop: \"0\"\n    },\n    keys: item => item.key,\n    config: config.gentle,\n    onRest: () => setTimeout(() => setSpringDone(true), 1000),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, item => styles => /*#__PURE__*/React.createElement(animated.div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }\n  }, item)));\n}\n\nexport default Welcome;","map":{"version":3,"sources":["/Users/raymondzhang/Code/website/raymondxyz.github.io/raymondxyz/src/components/welcome/Welcome.js"],"names":["React","useState","colors","SpringBar","FaLinkedin","FaInstagram","AiOutlineMail","AiFillGithub","Trail","animated","config","Welcome","springDone","setSpringDone","bars","i","push","green","backgroundColor","white","blue","width","height","marginTop","item","key","gentle","setTimeout","styles"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAUC,MAAV,QAAwB,sBAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,gBAAxC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,cAAxC;;AAEA,SAASC,OAAT,OAEG;AAAA,MAFc,EAEd;AACC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C,CADD,CAGC;;AACA,QAAMa,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,IAAAA,IAAI,CAACE,IAAL,eACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,MAApB;AAA2B,MAAA,QAAQ,EAAEd,MAAM,CAACe,KAA5C;AAAmD,MAAA,GAAG,EAAEF,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAED,sBACI;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAEhB,MAAM,CAACiB;AAA1B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQMP,UAAU,gBACR;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,eAAe,EAAEhB,MAAM,CAACkB,IADnB;AAELC,MAAAA,KAAK,EAAE,OAFF;AAGLC,MAAAA,MAAM,EAAE;AAHH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,gBAWR,oBAAC,KAAD;AACE,IAAA,KAAK,EAAER,IADT;AAEE,IAAA,IAAI,EAAE;AAAES,MAAAA,SAAS,EAAE;AAAb,KAFR;AAGE,IAAA,EAAE,EAAE;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHN;AAIE,IAAA,IAAI,EAAGC,IAAD,IAAUA,IAAI,CAACC,GAJvB;AAKE,IAAA,MAAM,EAAEf,MAAM,CAACgB,MALjB;AAME,IAAA,MAAM,EAAE,MAAMC,UAAU,CAAC,MAAMd,aAAa,CAAC,IAAD,CAApB,EAA4B,IAA5B,CAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKW,IAAI,IAAII,MAAM,iBAAI,oBAAC,QAAD,CAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeJ,IAAf,CARvB,CAnBR,CADJ;AAkCH;;AAED,eAAeb,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport  { colors } from \"../../styling/colors\";\nimport SpringBar from \"./SpringBar\";\nimport { FaLinkedin, FaInstagram } from \"react-icons/fa\";\nimport { AiOutlineMail, AiFillGithub } from \"react-icons/ai\";\nimport { Trail, animated, config } from \"react-spring\";\n\nfunction Welcome({\n\n}) {\n    const [springDone, setSpringDone] = useState(false);\n\n    // Create array for trail animation\n    const bars = [];\n    for (let i = 0; i < 10; i++) {\n        bars.push(\n            <SpringBar barWidth=\"10vw\" barColor={colors.green} key={i}></SpringBar>\n        )\n    }\n    \n    return (\n        <div\n          className=\"full_section\"\n          style={{ backgroundColor: colors.white }}\n        >\n            {/* <div className=\"section_main_content\">\n                <h1> Hi This Is Landing Component </h1>\n            </div> */}\n            \n            { springDone ? (\n                <div \n                  style={{ \n                    backgroundColor: colors.blue,\n                    width: \"100vw\",\n                    height: \"100vh\"\n                }}\n                >\n                </div>\n\n             ) : (\n                <Trail\n                  items={bars}\n                  from={{ marginTop: \"-100vh\" }}\n                  to={{ marginTop: \"0\" }}\n                  keys={(item) => item.key }\n                  config={config.gentle}\n                  onRest={() => setTimeout(() => setSpringDone(true), 1000)}\n                >\n                    {item => styles => <animated.div>{item}</animated.div>}\n                </Trail>\n             )\n            }\n        </div>\n    )\n}\n\nexport default Welcome"]},"metadata":{},"sourceType":"module"}